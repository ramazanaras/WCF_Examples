//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceGiris.EntityService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Urun", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Urun : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FiyatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StokField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrunAdiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UrunIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fiyat {
            get {
                return this.FiyatField;
            }
            set {
                if ((this.FiyatField.Equals(value) != true)) {
                    this.FiyatField = value;
                    this.RaisePropertyChanged("Fiyat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Stok {
            get {
                return this.StokField;
            }
            set {
                if ((this.StokField.Equals(value) != true)) {
                    this.StokField = value;
                    this.RaisePropertyChanged("Stok");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrunAdi {
            get {
                return this.UrunAdiField;
            }
            set {
                if ((object.ReferenceEquals(this.UrunAdiField, value) != true)) {
                    this.UrunAdiField = value;
                    this.RaisePropertyChanged("UrunAdi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UrunID {
            get {
                return this.UrunIDField;
            }
            set {
                if ((this.UrunIDField.Equals(value) != true)) {
                    this.UrunIDField = value;
                    this.RaisePropertyChanged("UrunID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EntityService.IEntityService")]
    public interface IEntityService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Listele", ReplyAction="http://tempuri.org/IEntityService/ListeleResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WCFServiceGiris.EntityService.Urun))]
        object Listele();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Listele", ReplyAction="http://tempuri.org/IEntityService/ListeleResponse")]
        System.Threading.Tasks.Task<object> ListeleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Ekle", ReplyAction="http://tempuri.org/IEntityService/EkleResponse")]
        bool Ekle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Ekle", ReplyAction="http://tempuri.org/IEntityService/EkleResponse")]
        System.Threading.Tasks.Task<bool> EkleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Guncelle", ReplyAction="http://tempuri.org/IEntityService/GuncelleResponse")]
        bool Guncelle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Guncelle", ReplyAction="http://tempuri.org/IEntityService/GuncelleResponse")]
        System.Threading.Tasks.Task<bool> GuncelleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Sil", ReplyAction="http://tempuri.org/IEntityService/SilResponse")]
        bool Sil();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/Sil", ReplyAction="http://tempuri.org/IEntityService/SilResponse")]
        System.Threading.Tasks.Task<bool> SilAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/UrunSec", ReplyAction="http://tempuri.org/IEntityService/UrunSecResponse")]
        WCFServiceGiris.EntityService.Urun UrunSec(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityService/UrunSec", ReplyAction="http://tempuri.org/IEntityService/UrunSecResponse")]
        System.Threading.Tasks.Task<WCFServiceGiris.EntityService.Urun> UrunSecAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntityServiceChannel : WCFServiceGiris.EntityService.IEntityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityServiceClient : System.ServiceModel.ClientBase<WCFServiceGiris.EntityService.IEntityService>, WCFServiceGiris.EntityService.IEntityService {
        
        public EntityServiceClient() {
        }
        
        public EntityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object Listele() {
            return base.Channel.Listele();
        }
        
        public System.Threading.Tasks.Task<object> ListeleAsync() {
            return base.Channel.ListeleAsync();
        }
        
        public bool Ekle() {
            return base.Channel.Ekle();
        }
        
        public System.Threading.Tasks.Task<bool> EkleAsync() {
            return base.Channel.EkleAsync();
        }
        
        public bool Guncelle() {
            return base.Channel.Guncelle();
        }
        
        public System.Threading.Tasks.Task<bool> GuncelleAsync() {
            return base.Channel.GuncelleAsync();
        }
        
        public bool Sil() {
            return base.Channel.Sil();
        }
        
        public System.Threading.Tasks.Task<bool> SilAsync() {
            return base.Channel.SilAsync();
        }
        
        public WCFServiceGiris.EntityService.Urun UrunSec(int id) {
            return base.Channel.UrunSec(id);
        }
        
        public System.Threading.Tasks.Task<WCFServiceGiris.EntityService.Urun> UrunSecAsync(int id) {
            return base.Channel.UrunSecAsync(id);
        }
    }
}
