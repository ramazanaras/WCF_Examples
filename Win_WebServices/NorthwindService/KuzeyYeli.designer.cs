#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthwindService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KuzeyYeli")]
	public partial class KuzeyYeliDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void InsertUrunler(Urunler instance);
    partial void UpdateUrunler(Urunler instance);
    partial void DeleteUrunler(Urunler instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertBolge(Bolge instance);
    partial void UpdateBolge(Bolge instance);
    partial void DeleteBolge(Bolge instance);
    partial void InsertBolgeler(Bolgeler instance);
    partial void UpdateBolgeler(Bolgeler instance);
    partial void DeleteBolgeler(Bolgeler instance);
    partial void InsertKategoriler(Kategoriler instance);
    partial void UpdateKategoriler(Kategoriler instance);
    partial void DeleteKategoriler(Kategoriler instance);
    partial void InsertMusteriDemographic(MusteriDemographic instance);
    partial void UpdateMusteriDemographic(MusteriDemographic instance);
    partial void DeleteMusteriDemographic(MusteriDemographic instance);
    partial void InsertMusteriler(Musteriler instance);
    partial void UpdateMusteriler(Musteriler instance);
    partial void DeleteMusteriler(Musteriler instance);
    partial void InsertMusteriMusteriDemo(MusteriMusteriDemo instance);
    partial void UpdateMusteriMusteriDemo(MusteriMusteriDemo instance);
    partial void DeleteMusteriMusteriDemo(MusteriMusteriDemo instance);
    partial void InsertNakliyeciler(Nakliyeciler instance);
    partial void UpdateNakliyeciler(Nakliyeciler instance);
    partial void DeleteNakliyeciler(Nakliyeciler instance);
    partial void InsertPersonelBolgeler(PersonelBolgeler instance);
    partial void UpdatePersonelBolgeler(PersonelBolgeler instance);
    partial void DeletePersonelBolgeler(PersonelBolgeler instance);
    partial void InsertPersoneller(Personeller instance);
    partial void UpdatePersoneller(Personeller instance);
    partial void DeletePersoneller(Personeller instance);
    partial void InsertSatisDetay(SatisDetay instance);
    partial void UpdateSatisDetay(SatisDetay instance);
    partial void DeleteSatisDetay(SatisDetay instance);
    partial void InsertSatislar(Satislar instance);
    partial void UpdateSatislar(Satislar instance);
    partial void DeleteSatislar(Satislar instance);
    partial void InsertTedarikciler(Tedarikciler instance);
    partial void UpdateTedarikciler(Tedarikciler instance);
    partial void DeleteTedarikciler(Tedarikciler instance);
    #endregion
		
		public KuzeyYeliDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KuzeyYeliConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KuzeyYeliDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KuzeyYeliDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KuzeyYeliDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KuzeyYeliDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<Urunler> Urunlers
		{
			get
			{
				return this.GetTable<Urunler>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Bolge> Bolges
		{
			get
			{
				return this.GetTable<Bolge>();
			}
		}
		
		public System.Data.Linq.Table<Bolgeler> Bolgelers
		{
			get
			{
				return this.GetTable<Bolgeler>();
			}
		}
		
		public System.Data.Linq.Table<Kategoriler> Kategorilers
		{
			get
			{
				return this.GetTable<Kategoriler>();
			}
		}
		
		public System.Data.Linq.Table<MusteriDemographic> MusteriDemographics
		{
			get
			{
				return this.GetTable<MusteriDemographic>();
			}
		}
		
		public System.Data.Linq.Table<Musteriler> Musterilers
		{
			get
			{
				return this.GetTable<Musteriler>();
			}
		}
		
		public System.Data.Linq.Table<MusteriMusteriDemo> MusteriMusteriDemos
		{
			get
			{
				return this.GetTable<MusteriMusteriDemo>();
			}
		}
		
		public System.Data.Linq.Table<Nakliyeciler> Nakliyecilers
		{
			get
			{
				return this.GetTable<Nakliyeciler>();
			}
		}
		
		public System.Data.Linq.Table<PersonelBolgeler> PersonelBolgelers
		{
			get
			{
				return this.GetTable<PersonelBolgeler>();
			}
		}
		
		public System.Data.Linq.Table<Personeller> Personellers
		{
			get
			{
				return this.GetTable<Personeller>();
			}
		}
		
		public System.Data.Linq.Table<SatisDetay> SatisDetays
		{
			get
			{
				return this.GetTable<SatisDetay>();
			}
		}
		
		public System.Data.Linq.Table<Satislar> Satislars
		{
			get
			{
				return this.GetTable<Satislar>();
			}
		}
		
		public System.Data.Linq.Table<Tedarikciler> Tedarikcilers
		{
			get
			{
				return this.GetTable<Tedarikciler>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Urunler")]
	public partial class Urunler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UrunID;
		
		private string _UrunAdi;
		
		private System.Nullable<int> _TedarikciID;
		
		private System.Nullable<int> _KategoriID;
		
		private string _BirimdekiMiktar;
		
		private System.Nullable<decimal> _Fiyat;
		
		private System.Nullable<short> _Stok;
		
		private System.Nullable<short> _YeniSatis;
		
		private System.Nullable<short> _EnAzYenidenSatisMikatari;
		
		private bool _Sonlandi;
		
		private string _UrunResimUrl;
		
		private EntitySet<SatisDetay> _SatisDetays;
		
		private EntityRef<Kategoriler> _Kategoriler;
		
		private EntityRef<Tedarikciler> _Tedarikciler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrunIDChanging(int value);
    partial void OnUrunIDChanged();
    partial void OnUrunAdiChanging(string value);
    partial void OnUrunAdiChanged();
    partial void OnTedarikciIDChanging(System.Nullable<int> value);
    partial void OnTedarikciIDChanged();
    partial void OnKategoriIDChanging(System.Nullable<int> value);
    partial void OnKategoriIDChanged();
    partial void OnBirimdekiMiktarChanging(string value);
    partial void OnBirimdekiMiktarChanged();
    partial void OnFiyatChanging(System.Nullable<decimal> value);
    partial void OnFiyatChanged();
    partial void OnStokChanging(System.Nullable<short> value);
    partial void OnStokChanged();
    partial void OnYeniSatisChanging(System.Nullable<short> value);
    partial void OnYeniSatisChanged();
    partial void OnEnAzYenidenSatisMikatariChanging(System.Nullable<short> value);
    partial void OnEnAzYenidenSatisMikatariChanged();
    partial void OnSonlandiChanging(bool value);
    partial void OnSonlandiChanged();
    partial void OnUrunResimUrlChanging(string value);
    partial void OnUrunResimUrlChanged();
    #endregion
		
		public Urunler()
		{
			this._SatisDetays = new EntitySet<SatisDetay>(new Action<SatisDetay>(this.attach_SatisDetays), new Action<SatisDetay>(this.detach_SatisDetays));
			this._Kategoriler = default(EntityRef<Kategoriler>);
			this._Tedarikciler = default(EntityRef<Tedarikciler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UrunID
		{
			get
			{
				return this._UrunID;
			}
			set
			{
				if ((this._UrunID != value))
				{
					this.OnUrunIDChanging(value);
					this.SendPropertyChanging();
					this._UrunID = value;
					this.SendPropertyChanged("UrunID");
					this.OnUrunIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunAdi", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string UrunAdi
		{
			get
			{
				return this._UrunAdi;
			}
			set
			{
				if ((this._UrunAdi != value))
				{
					this.OnUrunAdiChanging(value);
					this.SendPropertyChanging();
					this._UrunAdi = value;
					this.SendPropertyChanged("UrunAdi");
					this.OnUrunAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TedarikciID", DbType="Int")]
		public System.Nullable<int> TedarikciID
		{
			get
			{
				return this._TedarikciID;
			}
			set
			{
				if ((this._TedarikciID != value))
				{
					if (this._Tedarikciler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTedarikciIDChanging(value);
					this.SendPropertyChanging();
					this._TedarikciID = value;
					this.SendPropertyChanged("TedarikciID");
					this.OnTedarikciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategoriID", DbType="Int")]
		public System.Nullable<int> KategoriID
		{
			get
			{
				return this._KategoriID;
			}
			set
			{
				if ((this._KategoriID != value))
				{
					if (this._Kategoriler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKategoriIDChanging(value);
					this.SendPropertyChanging();
					this._KategoriID = value;
					this.SendPropertyChanged("KategoriID");
					this.OnKategoriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimdekiMiktar", DbType="NVarChar(20)")]
		public string BirimdekiMiktar
		{
			get
			{
				return this._BirimdekiMiktar;
			}
			set
			{
				if ((this._BirimdekiMiktar != value))
				{
					this.OnBirimdekiMiktarChanging(value);
					this.SendPropertyChanging();
					this._BirimdekiMiktar = value;
					this.SendPropertyChanged("BirimdekiMiktar");
					this.OnBirimdekiMiktarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fiyat", DbType="Money")]
		public System.Nullable<decimal> Fiyat
		{
			get
			{
				return this._Fiyat;
			}
			set
			{
				if ((this._Fiyat != value))
				{
					this.OnFiyatChanging(value);
					this.SendPropertyChanging();
					this._Fiyat = value;
					this.SendPropertyChanged("Fiyat");
					this.OnFiyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stok", DbType="SmallInt")]
		public System.Nullable<short> Stok
		{
			get
			{
				return this._Stok;
			}
			set
			{
				if ((this._Stok != value))
				{
					this.OnStokChanging(value);
					this.SendPropertyChanging();
					this._Stok = value;
					this.SendPropertyChanged("Stok");
					this.OnStokChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YeniSatis", DbType="SmallInt")]
		public System.Nullable<short> YeniSatis
		{
			get
			{
				return this._YeniSatis;
			}
			set
			{
				if ((this._YeniSatis != value))
				{
					this.OnYeniSatisChanging(value);
					this.SendPropertyChanging();
					this._YeniSatis = value;
					this.SendPropertyChanged("YeniSatis");
					this.OnYeniSatisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnAzYenidenSatisMikatari", DbType="SmallInt")]
		public System.Nullable<short> EnAzYenidenSatisMikatari
		{
			get
			{
				return this._EnAzYenidenSatisMikatari;
			}
			set
			{
				if ((this._EnAzYenidenSatisMikatari != value))
				{
					this.OnEnAzYenidenSatisMikatariChanging(value);
					this.SendPropertyChanging();
					this._EnAzYenidenSatisMikatari = value;
					this.SendPropertyChanged("EnAzYenidenSatisMikatari");
					this.OnEnAzYenidenSatisMikatariChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sonlandi", DbType="Bit NOT NULL")]
		public bool Sonlandi
		{
			get
			{
				return this._Sonlandi;
			}
			set
			{
				if ((this._Sonlandi != value))
				{
					this.OnSonlandiChanging(value);
					this.SendPropertyChanging();
					this._Sonlandi = value;
					this.SendPropertyChanged("Sonlandi");
					this.OnSonlandiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunResimUrl", DbType="NVarChar(500)")]
		public string UrunResimUrl
		{
			get
			{
				return this._UrunResimUrl;
			}
			set
			{
				if ((this._UrunResimUrl != value))
				{
					this.OnUrunResimUrlChanging(value);
					this.SendPropertyChanging();
					this._UrunResimUrl = value;
					this.SendPropertyChanged("UrunResimUrl");
					this.OnUrunResimUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_SatisDetay", Storage="_SatisDetays", ThisKey="UrunID", OtherKey="UrunID")]
		public EntitySet<SatisDetay> SatisDetays
		{
			get
			{
				return this._SatisDetays;
			}
			set
			{
				this._SatisDetays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoriler_Urunler", Storage="_Kategoriler", ThisKey="KategoriID", OtherKey="KategoriID", IsForeignKey=true)]
		public Kategoriler Kategoriler
		{
			get
			{
				return this._Kategoriler.Entity;
			}
			set
			{
				Kategoriler previousValue = this._Kategoriler.Entity;
				if (((previousValue != value) 
							|| (this._Kategoriler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoriler.Entity = null;
						previousValue.Urunlers.Remove(this);
					}
					this._Kategoriler.Entity = value;
					if ((value != null))
					{
						value.Urunlers.Add(this);
						this._KategoriID = value.KategoriID;
					}
					else
					{
						this._KategoriID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoriler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tedarikciler_Urunler", Storage="_Tedarikciler", ThisKey="TedarikciID", OtherKey="TedarikciID", IsForeignKey=true)]
		public Tedarikciler Tedarikciler
		{
			get
			{
				return this._Tedarikciler.Entity;
			}
			set
			{
				Tedarikciler previousValue = this._Tedarikciler.Entity;
				if (((previousValue != value) 
							|| (this._Tedarikciler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tedarikciler.Entity = null;
						previousValue.Urunlers.Remove(this);
					}
					this._Tedarikciler.Entity = value;
					if ((value != null))
					{
						value.Urunlers.Add(this);
						this._TedarikciID = value.TedarikciID;
					}
					else
					{
						this._TedarikciID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Tedarikciler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SatisDetays(SatisDetay entity)
		{
			this.SendPropertyChanging();
			entity.Urunler = this;
		}
		
		private void detach_SatisDetays(SatisDetay entity)
		{
			this.SendPropertyChanging();
			entity.Urunler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bolge")]
	public partial class Bolge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BolgeID;
		
		private string _BolgeTanimi;
		
		private EntitySet<Bolgeler> _Bolgelers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBolgeIDChanging(int value);
    partial void OnBolgeIDChanged();
    partial void OnBolgeTanimiChanging(string value);
    partial void OnBolgeTanimiChanged();
    #endregion
		
		public Bolge()
		{
			this._Bolgelers = new EntitySet<Bolgeler>(new Action<Bolgeler>(this.attach_Bolgelers), new Action<Bolgeler>(this.detach_Bolgelers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BolgeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BolgeID
		{
			get
			{
				return this._BolgeID;
			}
			set
			{
				if ((this._BolgeID != value))
				{
					this.OnBolgeIDChanging(value);
					this.SendPropertyChanging();
					this._BolgeID = value;
					this.SendPropertyChanged("BolgeID");
					this.OnBolgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BolgeTanimi", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string BolgeTanimi
		{
			get
			{
				return this._BolgeTanimi;
			}
			set
			{
				if ((this._BolgeTanimi != value))
				{
					this.OnBolgeTanimiChanging(value);
					this.SendPropertyChanging();
					this._BolgeTanimi = value;
					this.SendPropertyChanged("BolgeTanimi");
					this.OnBolgeTanimiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bolge_Bolgeler", Storage="_Bolgelers", ThisKey="BolgeID", OtherKey="BolgeID")]
		public EntitySet<Bolgeler> Bolgelers
		{
			get
			{
				return this._Bolgelers;
			}
			set
			{
				this._Bolgelers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bolgelers(Bolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Bolge = this;
		}
		
		private void detach_Bolgelers(Bolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Bolge = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bolgeler")]
	public partial class Bolgeler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TerritoryID;
		
		private string _TerritoryTanimi;
		
		private int _BolgeID;
		
		private EntitySet<PersonelBolgeler> _PersonelBolgelers;
		
		private EntityRef<Bolge> _Bolge;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerritoryIDChanging(string value);
    partial void OnTerritoryIDChanged();
    partial void OnTerritoryTanimiChanging(string value);
    partial void OnTerritoryTanimiChanged();
    partial void OnBolgeIDChanging(int value);
    partial void OnBolgeIDChanged();
    #endregion
		
		public Bolgeler()
		{
			this._PersonelBolgelers = new EntitySet<PersonelBolgeler>(new Action<PersonelBolgeler>(this.attach_PersonelBolgelers), new Action<PersonelBolgeler>(this.detach_PersonelBolgelers));
			this._Bolge = default(EntityRef<Bolge>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryTanimi", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string TerritoryTanimi
		{
			get
			{
				return this._TerritoryTanimi;
			}
			set
			{
				if ((this._TerritoryTanimi != value))
				{
					this.OnTerritoryTanimiChanging(value);
					this.SendPropertyChanging();
					this._TerritoryTanimi = value;
					this.SendPropertyChanged("TerritoryTanimi");
					this.OnTerritoryTanimiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BolgeID", DbType="Int NOT NULL")]
		public int BolgeID
		{
			get
			{
				return this._BolgeID;
			}
			set
			{
				if ((this._BolgeID != value))
				{
					if (this._Bolge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBolgeIDChanging(value);
					this.SendPropertyChanging();
					this._BolgeID = value;
					this.SendPropertyChanged("BolgeID");
					this.OnBolgeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bolgeler_PersonelBolgeler", Storage="_PersonelBolgelers", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<PersonelBolgeler> PersonelBolgelers
		{
			get
			{
				return this._PersonelBolgelers;
			}
			set
			{
				this._PersonelBolgelers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bolge_Bolgeler", Storage="_Bolge", ThisKey="BolgeID", OtherKey="BolgeID", IsForeignKey=true)]
		public Bolge Bolge
		{
			get
			{
				return this._Bolge.Entity;
			}
			set
			{
				Bolge previousValue = this._Bolge.Entity;
				if (((previousValue != value) 
							|| (this._Bolge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bolge.Entity = null;
						previousValue.Bolgelers.Remove(this);
					}
					this._Bolge.Entity = value;
					if ((value != null))
					{
						value.Bolgelers.Add(this);
						this._BolgeID = value.BolgeID;
					}
					else
					{
						this._BolgeID = default(int);
					}
					this.SendPropertyChanged("Bolge");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonelBolgelers(PersonelBolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Bolgeler = this;
		}
		
		private void detach_PersonelBolgelers(PersonelBolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Bolgeler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoriler")]
	public partial class Kategoriler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KategoriID;
		
		private string _KategoriAdi;
		
		private string _Tanimi;
		
		private System.Data.Linq.Binary _Resim;
		
		private EntitySet<Urunler> _Urunlers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKategoriIDChanging(int value);
    partial void OnKategoriIDChanged();
    partial void OnKategoriAdiChanging(string value);
    partial void OnKategoriAdiChanged();
    partial void OnTanimiChanging(string value);
    partial void OnTanimiChanged();
    partial void OnResimChanging(System.Data.Linq.Binary value);
    partial void OnResimChanged();
    #endregion
		
		public Kategoriler()
		{
			this._Urunlers = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunlers), new Action<Urunler>(this.detach_Urunlers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategoriID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KategoriID
		{
			get
			{
				return this._KategoriID;
			}
			set
			{
				if ((this._KategoriID != value))
				{
					this.OnKategoriIDChanging(value);
					this.SendPropertyChanging();
					this._KategoriID = value;
					this.SendPropertyChanged("KategoriID");
					this.OnKategoriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KategoriAdi", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string KategoriAdi
		{
			get
			{
				return this._KategoriAdi;
			}
			set
			{
				if ((this._KategoriAdi != value))
				{
					this.OnKategoriAdiChanging(value);
					this.SendPropertyChanging();
					this._KategoriAdi = value;
					this.SendPropertyChanged("KategoriAdi");
					this.OnKategoriAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tanimi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Tanimi
		{
			get
			{
				return this._Tanimi;
			}
			set
			{
				if ((this._Tanimi != value))
				{
					this.OnTanimiChanging(value);
					this.SendPropertyChanging();
					this._Tanimi = value;
					this.SendPropertyChanged("Tanimi");
					this.OnTanimiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resim", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Resim
		{
			get
			{
				return this._Resim;
			}
			set
			{
				if ((this._Resim != value))
				{
					this.OnResimChanging(value);
					this.SendPropertyChanging();
					this._Resim = value;
					this.SendPropertyChanged("Resim");
					this.OnResimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoriler_Urunler", Storage="_Urunlers", ThisKey="KategoriID", OtherKey="KategoriID")]
		public EntitySet<Urunler> Urunlers
		{
			get
			{
				return this._Urunlers;
			}
			set
			{
				this._Urunlers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Kategoriler = this;
		}
		
		private void detach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Kategoriler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MusteriDemographics")]
	public partial class MusteriDemographic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MusteriTypeID;
		
		private string _MusteriDesc;
		
		private EntitySet<MusteriMusteriDemo> _MusteriMusteriDemos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusteriTypeIDChanging(string value);
    partial void OnMusteriTypeIDChanged();
    partial void OnMusteriDescChanging(string value);
    partial void OnMusteriDescChanged();
    #endregion
		
		public MusteriDemographic()
		{
			this._MusteriMusteriDemos = new EntitySet<MusteriMusteriDemo>(new Action<MusteriMusteriDemo>(this.attach_MusteriMusteriDemos), new Action<MusteriMusteriDemo>(this.detach_MusteriMusteriDemos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriTypeID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MusteriTypeID
		{
			get
			{
				return this._MusteriTypeID;
			}
			set
			{
				if ((this._MusteriTypeID != value))
				{
					this.OnMusteriTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MusteriTypeID = value;
					this.SendPropertyChanged("MusteriTypeID");
					this.OnMusteriTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriDesc", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MusteriDesc
		{
			get
			{
				return this._MusteriDesc;
			}
			set
			{
				if ((this._MusteriDesc != value))
				{
					this.OnMusteriDescChanging(value);
					this.SendPropertyChanging();
					this._MusteriDesc = value;
					this.SendPropertyChanged("MusteriDesc");
					this.OnMusteriDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MusteriDemographic_MusteriMusteriDemo", Storage="_MusteriMusteriDemos", ThisKey="MusteriTypeID", OtherKey="MusteriTypeID")]
		public EntitySet<MusteriMusteriDemo> MusteriMusteriDemos
		{
			get
			{
				return this._MusteriMusteriDemos;
			}
			set
			{
				this._MusteriMusteriDemos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MusteriMusteriDemos(MusteriMusteriDemo entity)
		{
			this.SendPropertyChanging();
			entity.MusteriDemographic = this;
		}
		
		private void detach_MusteriMusteriDemos(MusteriMusteriDemo entity)
		{
			this.SendPropertyChanging();
			entity.MusteriDemographic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Musteriler")]
	public partial class Musteriler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MusteriID;
		
		private string _SirketAdi;
		
		private string _MusteriAdi;
		
		private string _MusteriUnvani;
		
		private string _Adres;
		
		private string _Sehir;
		
		private string _Bolge;
		
		private string _PostaKodu;
		
		private string _Ulke;
		
		private string _Telefon;
		
		private string _Faks;
		
		private EntitySet<MusteriMusteriDemo> _MusteriMusteriDemos;
		
		private EntitySet<Satislar> _Satislars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusteriIDChanging(string value);
    partial void OnMusteriIDChanged();
    partial void OnSirketAdiChanging(string value);
    partial void OnSirketAdiChanged();
    partial void OnMusteriAdiChanging(string value);
    partial void OnMusteriAdiChanged();
    partial void OnMusteriUnvaniChanging(string value);
    partial void OnMusteriUnvaniChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnSehirChanging(string value);
    partial void OnSehirChanged();
    partial void OnBolgeChanging(string value);
    partial void OnBolgeChanged();
    partial void OnPostaKoduChanging(string value);
    partial void OnPostaKoduChanged();
    partial void OnUlkeChanging(string value);
    partial void OnUlkeChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnFaksChanging(string value);
    partial void OnFaksChanged();
    #endregion
		
		public Musteriler()
		{
			this._MusteriMusteriDemos = new EntitySet<MusteriMusteriDemo>(new Action<MusteriMusteriDemo>(this.attach_MusteriMusteriDemos), new Action<MusteriMusteriDemo>(this.detach_MusteriMusteriDemos));
			this._Satislars = new EntitySet<Satislar>(new Action<Satislar>(this.attach_Satislars), new Action<Satislar>(this.detach_Satislars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriID", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MusteriID
		{
			get
			{
				return this._MusteriID;
			}
			set
			{
				if ((this._MusteriID != value))
				{
					this.OnMusteriIDChanging(value);
					this.SendPropertyChanging();
					this._MusteriID = value;
					this.SendPropertyChanged("MusteriID");
					this.OnMusteriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SirketAdi", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SirketAdi
		{
			get
			{
				return this._SirketAdi;
			}
			set
			{
				if ((this._SirketAdi != value))
				{
					this.OnSirketAdiChanging(value);
					this.SendPropertyChanging();
					this._SirketAdi = value;
					this.SendPropertyChanged("SirketAdi");
					this.OnSirketAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriAdi", DbType="NVarChar(30)")]
		public string MusteriAdi
		{
			get
			{
				return this._MusteriAdi;
			}
			set
			{
				if ((this._MusteriAdi != value))
				{
					this.OnMusteriAdiChanging(value);
					this.SendPropertyChanging();
					this._MusteriAdi = value;
					this.SendPropertyChanged("MusteriAdi");
					this.OnMusteriAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriUnvani", DbType="NVarChar(30)")]
		public string MusteriUnvani
		{
			get
			{
				return this._MusteriUnvani;
			}
			set
			{
				if ((this._MusteriUnvani != value))
				{
					this.OnMusteriUnvaniChanging(value);
					this.SendPropertyChanging();
					this._MusteriUnvani = value;
					this.SendPropertyChanged("MusteriUnvani");
					this.OnMusteriUnvaniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(60)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="NVarChar(15)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bolge", DbType="NVarChar(15)")]
		public string Bolge
		{
			get
			{
				return this._Bolge;
			}
			set
			{
				if ((this._Bolge != value))
				{
					this.OnBolgeChanging(value);
					this.SendPropertyChanging();
					this._Bolge = value;
					this.SendPropertyChanged("Bolge");
					this.OnBolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostaKodu", DbType="NVarChar(10)")]
		public string PostaKodu
		{
			get
			{
				return this._PostaKodu;
			}
			set
			{
				if ((this._PostaKodu != value))
				{
					this.OnPostaKoduChanging(value);
					this.SendPropertyChanging();
					this._PostaKodu = value;
					this.SendPropertyChanged("PostaKodu");
					this.OnPostaKoduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulke", DbType="NVarChar(15)")]
		public string Ulke
		{
			get
			{
				return this._Ulke;
			}
			set
			{
				if ((this._Ulke != value))
				{
					this.OnUlkeChanging(value);
					this.SendPropertyChanging();
					this._Ulke = value;
					this.SendPropertyChanged("Ulke");
					this.OnUlkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(24)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faks", DbType="NVarChar(24)")]
		public string Faks
		{
			get
			{
				return this._Faks;
			}
			set
			{
				if ((this._Faks != value))
				{
					this.OnFaksChanging(value);
					this.SendPropertyChanging();
					this._Faks = value;
					this.SendPropertyChanged("Faks");
					this.OnFaksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteriler_MusteriMusteriDemo", Storage="_MusteriMusteriDemos", ThisKey="MusteriID", OtherKey="MusteriID")]
		public EntitySet<MusteriMusteriDemo> MusteriMusteriDemos
		{
			get
			{
				return this._MusteriMusteriDemos;
			}
			set
			{
				this._MusteriMusteriDemos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteriler_Satislar", Storage="_Satislars", ThisKey="MusteriID", OtherKey="MusteriID")]
		public EntitySet<Satislar> Satislars
		{
			get
			{
				return this._Satislars;
			}
			set
			{
				this._Satislars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MusteriMusteriDemos(MusteriMusteriDemo entity)
		{
			this.SendPropertyChanging();
			entity.Musteriler = this;
		}
		
		private void detach_MusteriMusteriDemos(MusteriMusteriDemo entity)
		{
			this.SendPropertyChanging();
			entity.Musteriler = null;
		}
		
		private void attach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Musteriler = this;
		}
		
		private void detach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Musteriler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MusteriMusteriDemo")]
	public partial class MusteriMusteriDemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MusteriID;
		
		private string _MusteriTypeID;
		
		private EntityRef<MusteriDemographic> _MusteriDemographic;
		
		private EntityRef<Musteriler> _Musteriler;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusteriIDChanging(string value);
    partial void OnMusteriIDChanged();
    partial void OnMusteriTypeIDChanging(string value);
    partial void OnMusteriTypeIDChanged();
    #endregion
		
		public MusteriMusteriDemo()
		{
			this._MusteriDemographic = default(EntityRef<MusteriDemographic>);
			this._Musteriler = default(EntityRef<Musteriler>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriID", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MusteriID
		{
			get
			{
				return this._MusteriID;
			}
			set
			{
				if ((this._MusteriID != value))
				{
					if (this._Musteriler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMusteriIDChanging(value);
					this.SendPropertyChanging();
					this._MusteriID = value;
					this.SendPropertyChanged("MusteriID");
					this.OnMusteriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriTypeID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MusteriTypeID
		{
			get
			{
				return this._MusteriTypeID;
			}
			set
			{
				if ((this._MusteriTypeID != value))
				{
					if (this._MusteriDemographic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMusteriTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MusteriTypeID = value;
					this.SendPropertyChanged("MusteriTypeID");
					this.OnMusteriTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MusteriDemographic_MusteriMusteriDemo", Storage="_MusteriDemographic", ThisKey="MusteriTypeID", OtherKey="MusteriTypeID", IsForeignKey=true)]
		public MusteriDemographic MusteriDemographic
		{
			get
			{
				return this._MusteriDemographic.Entity;
			}
			set
			{
				MusteriDemographic previousValue = this._MusteriDemographic.Entity;
				if (((previousValue != value) 
							|| (this._MusteriDemographic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MusteriDemographic.Entity = null;
						previousValue.MusteriMusteriDemos.Remove(this);
					}
					this._MusteriDemographic.Entity = value;
					if ((value != null))
					{
						value.MusteriMusteriDemos.Add(this);
						this._MusteriTypeID = value.MusteriTypeID;
					}
					else
					{
						this._MusteriTypeID = default(string);
					}
					this.SendPropertyChanged("MusteriDemographic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteriler_MusteriMusteriDemo", Storage="_Musteriler", ThisKey="MusteriID", OtherKey="MusteriID", IsForeignKey=true)]
		public Musteriler Musteriler
		{
			get
			{
				return this._Musteriler.Entity;
			}
			set
			{
				Musteriler previousValue = this._Musteriler.Entity;
				if (((previousValue != value) 
							|| (this._Musteriler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Musteriler.Entity = null;
						previousValue.MusteriMusteriDemos.Remove(this);
					}
					this._Musteriler.Entity = value;
					if ((value != null))
					{
						value.MusteriMusteriDemos.Add(this);
						this._MusteriID = value.MusteriID;
					}
					else
					{
						this._MusteriID = default(string);
					}
					this.SendPropertyChanged("Musteriler");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nakliyeciler")]
	public partial class Nakliyeciler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NakliyeciID;
		
		private string _SirketAdi;
		
		private string _Telefon;
		
		private EntitySet<Satislar> _Satislars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNakliyeciIDChanging(int value);
    partial void OnNakliyeciIDChanged();
    partial void OnSirketAdiChanging(string value);
    partial void OnSirketAdiChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    #endregion
		
		public Nakliyeciler()
		{
			this._Satislars = new EntitySet<Satislar>(new Action<Satislar>(this.attach_Satislars), new Action<Satislar>(this.detach_Satislars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NakliyeciID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NakliyeciID
		{
			get
			{
				return this._NakliyeciID;
			}
			set
			{
				if ((this._NakliyeciID != value))
				{
					this.OnNakliyeciIDChanging(value);
					this.SendPropertyChanging();
					this._NakliyeciID = value;
					this.SendPropertyChanged("NakliyeciID");
					this.OnNakliyeciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SirketAdi", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SirketAdi
		{
			get
			{
				return this._SirketAdi;
			}
			set
			{
				if ((this._SirketAdi != value))
				{
					this.OnSirketAdiChanging(value);
					this.SendPropertyChanging();
					this._SirketAdi = value;
					this.SendPropertyChanged("SirketAdi");
					this.OnSirketAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(24)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nakliyeciler_Satislar", Storage="_Satislars", ThisKey="NakliyeciID", OtherKey="ShipVia")]
		public EntitySet<Satislar> Satislars
		{
			get
			{
				return this._Satislars;
			}
			set
			{
				this._Satislars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Nakliyeciler = this;
		}
		
		private void detach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Nakliyeciler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonelBolgeler")]
	public partial class PersonelBolgeler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonelID;
		
		private string _TerritoryID;
		
		private EntityRef<Bolgeler> _Bolgeler;
		
		private EntityRef<Personeller> _Personeller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnTerritoryIDChanging(string value);
    partial void OnTerritoryIDChanged();
    #endregion
		
		public PersonelBolgeler()
		{
			this._Bolgeler = default(EntityRef<Bolgeler>);
			this._Personeller = default(EntityRef<Personeller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					if (this._Personeller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._Bolgeler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bolgeler_PersonelBolgeler", Storage="_Bolgeler", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public Bolgeler Bolgeler
		{
			get
			{
				return this._Bolgeler.Entity;
			}
			set
			{
				Bolgeler previousValue = this._Bolgeler.Entity;
				if (((previousValue != value) 
							|| (this._Bolgeler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bolgeler.Entity = null;
						previousValue.PersonelBolgelers.Remove(this);
					}
					this._Bolgeler.Entity = value;
					if ((value != null))
					{
						value.PersonelBolgelers.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(string);
					}
					this.SendPropertyChanged("Bolgeler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_PersonelBolgeler", Storage="_Personeller", ThisKey="PersonelID", OtherKey="PersonelID", IsForeignKey=true)]
		public Personeller Personeller
		{
			get
			{
				return this._Personeller.Entity;
			}
			set
			{
				Personeller previousValue = this._Personeller.Entity;
				if (((previousValue != value) 
							|| (this._Personeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personeller.Entity = null;
						previousValue.PersonelBolgelers.Remove(this);
					}
					this._Personeller.Entity = value;
					if ((value != null))
					{
						value.PersonelBolgelers.Add(this);
						this._PersonelID = value.PersonelID;
					}
					else
					{
						this._PersonelID = default(int);
					}
					this.SendPropertyChanged("Personeller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personeller")]
	public partial class Personeller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonelID;
		
		private string _SoyAdi;
		
		private string _Adi;
		
		private string _Unvan;
		
		private string _UnvanEki;
		
		private System.Nullable<System.DateTime> _DogumTarihi;
		
		private System.Nullable<System.DateTime> _IseBaslamaTarihi;
		
		private string _Adres;
		
		private string _Sehir;
		
		private string _Bolge;
		
		private string _PostaKodu;
		
		private string _Ulke;
		
		private string _EvTelefonu;
		
		private string _Extension;
		
		private System.Data.Linq.Binary _Fotograf;
		
		private string _Notlar;
		
		private System.Nullable<int> _BagliCalistigiKisi;
		
		private string _FotografPath;
		
		private EntitySet<PersonelBolgeler> _PersonelBolgelers;
		
		private EntitySet<Personeller> _Personellers;
		
		private EntitySet<Satislar> _Satislars;
		
		private EntityRef<Personeller> _Personeller1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonelIDChanging(int value);
    partial void OnPersonelIDChanged();
    partial void OnSoyAdiChanging(string value);
    partial void OnSoyAdiChanged();
    partial void OnAdiChanging(string value);
    partial void OnAdiChanged();
    partial void OnUnvanChanging(string value);
    partial void OnUnvanChanged();
    partial void OnUnvanEkiChanging(string value);
    partial void OnUnvanEkiChanged();
    partial void OnDogumTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnDogumTarihiChanged();
    partial void OnIseBaslamaTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnIseBaslamaTarihiChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnSehirChanging(string value);
    partial void OnSehirChanged();
    partial void OnBolgeChanging(string value);
    partial void OnBolgeChanged();
    partial void OnPostaKoduChanging(string value);
    partial void OnPostaKoduChanged();
    partial void OnUlkeChanging(string value);
    partial void OnUlkeChanged();
    partial void OnEvTelefonuChanging(string value);
    partial void OnEvTelefonuChanged();
    partial void OnExtensionChanging(string value);
    partial void OnExtensionChanged();
    partial void OnFotografChanging(System.Data.Linq.Binary value);
    partial void OnFotografChanged();
    partial void OnNotlarChanging(string value);
    partial void OnNotlarChanged();
    partial void OnBagliCalistigiKisiChanging(System.Nullable<int> value);
    partial void OnBagliCalistigiKisiChanged();
    partial void OnFotografPathChanging(string value);
    partial void OnFotografPathChanged();
    #endregion
		
		public Personeller()
		{
			this._PersonelBolgelers = new EntitySet<PersonelBolgeler>(new Action<PersonelBolgeler>(this.attach_PersonelBolgelers), new Action<PersonelBolgeler>(this.detach_PersonelBolgelers));
			this._Personellers = new EntitySet<Personeller>(new Action<Personeller>(this.attach_Personellers), new Action<Personeller>(this.detach_Personellers));
			this._Satislars = new EntitySet<Satislar>(new Action<Satislar>(this.attach_Satislars), new Action<Satislar>(this.detach_Satislars));
			this._Personeller1 = default(EntityRef<Personeller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoyAdi", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SoyAdi
		{
			get
			{
				return this._SoyAdi;
			}
			set
			{
				if ((this._SoyAdi != value))
				{
					this.OnSoyAdiChanging(value);
					this.SendPropertyChanging();
					this._SoyAdi = value;
					this.SendPropertyChanged("SoyAdi");
					this.OnSoyAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adi", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Adi
		{
			get
			{
				return this._Adi;
			}
			set
			{
				if ((this._Adi != value))
				{
					this.OnAdiChanging(value);
					this.SendPropertyChanging();
					this._Adi = value;
					this.SendPropertyChanged("Adi");
					this.OnAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unvan", DbType="NVarChar(30)")]
		public string Unvan
		{
			get
			{
				return this._Unvan;
			}
			set
			{
				if ((this._Unvan != value))
				{
					this.OnUnvanChanging(value);
					this.SendPropertyChanging();
					this._Unvan = value;
					this.SendPropertyChanged("Unvan");
					this.OnUnvanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnvanEki", DbType="NVarChar(25)")]
		public string UnvanEki
		{
			get
			{
				return this._UnvanEki;
			}
			set
			{
				if ((this._UnvanEki != value))
				{
					this.OnUnvanEkiChanging(value);
					this.SendPropertyChanging();
					this._UnvanEki = value;
					this.SendPropertyChanged("UnvanEki");
					this.OnUnvanEkiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DogumTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> DogumTarihi
		{
			get
			{
				return this._DogumTarihi;
			}
			set
			{
				if ((this._DogumTarihi != value))
				{
					this.OnDogumTarihiChanging(value);
					this.SendPropertyChanging();
					this._DogumTarihi = value;
					this.SendPropertyChanged("DogumTarihi");
					this.OnDogumTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IseBaslamaTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> IseBaslamaTarihi
		{
			get
			{
				return this._IseBaslamaTarihi;
			}
			set
			{
				if ((this._IseBaslamaTarihi != value))
				{
					this.OnIseBaslamaTarihiChanging(value);
					this.SendPropertyChanging();
					this._IseBaslamaTarihi = value;
					this.SendPropertyChanged("IseBaslamaTarihi");
					this.OnIseBaslamaTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(60)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="NVarChar(15)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bolge", DbType="NVarChar(15)")]
		public string Bolge
		{
			get
			{
				return this._Bolge;
			}
			set
			{
				if ((this._Bolge != value))
				{
					this.OnBolgeChanging(value);
					this.SendPropertyChanging();
					this._Bolge = value;
					this.SendPropertyChanged("Bolge");
					this.OnBolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostaKodu", DbType="NVarChar(10)")]
		public string PostaKodu
		{
			get
			{
				return this._PostaKodu;
			}
			set
			{
				if ((this._PostaKodu != value))
				{
					this.OnPostaKoduChanging(value);
					this.SendPropertyChanging();
					this._PostaKodu = value;
					this.SendPropertyChanged("PostaKodu");
					this.OnPostaKoduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulke", DbType="NVarChar(15)")]
		public string Ulke
		{
			get
			{
				return this._Ulke;
			}
			set
			{
				if ((this._Ulke != value))
				{
					this.OnUlkeChanging(value);
					this.SendPropertyChanging();
					this._Ulke = value;
					this.SendPropertyChanged("Ulke");
					this.OnUlkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EvTelefonu", DbType="NVarChar(24)")]
		public string EvTelefonu
		{
			get
			{
				return this._EvTelefonu;
			}
			set
			{
				if ((this._EvTelefonu != value))
				{
					this.OnEvTelefonuChanging(value);
					this.SendPropertyChanging();
					this._EvTelefonu = value;
					this.SendPropertyChanged("EvTelefonu");
					this.OnEvTelefonuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extension", DbType="NVarChar(4)")]
		public string Extension
		{
			get
			{
				return this._Extension;
			}
			set
			{
				if ((this._Extension != value))
				{
					this.OnExtensionChanging(value);
					this.SendPropertyChanging();
					this._Extension = value;
					this.SendPropertyChanged("Extension");
					this.OnExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fotograf", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Fotograf
		{
			get
			{
				return this._Fotograf;
			}
			set
			{
				if ((this._Fotograf != value))
				{
					this.OnFotografChanging(value);
					this.SendPropertyChanging();
					this._Fotograf = value;
					this.SendPropertyChanged("Fotograf");
					this.OnFotografChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notlar", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notlar
		{
			get
			{
				return this._Notlar;
			}
			set
			{
				if ((this._Notlar != value))
				{
					this.OnNotlarChanging(value);
					this.SendPropertyChanging();
					this._Notlar = value;
					this.SendPropertyChanged("Notlar");
					this.OnNotlarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BagliCalistigiKisi", DbType="Int")]
		public System.Nullable<int> BagliCalistigiKisi
		{
			get
			{
				return this._BagliCalistigiKisi;
			}
			set
			{
				if ((this._BagliCalistigiKisi != value))
				{
					if (this._Personeller1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBagliCalistigiKisiChanging(value);
					this.SendPropertyChanging();
					this._BagliCalistigiKisi = value;
					this.SendPropertyChanged("BagliCalistigiKisi");
					this.OnBagliCalistigiKisiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FotografPath", DbType="NVarChar(255)")]
		public string FotografPath
		{
			get
			{
				return this._FotografPath;
			}
			set
			{
				if ((this._FotografPath != value))
				{
					this.OnFotografPathChanging(value);
					this.SendPropertyChanging();
					this._FotografPath = value;
					this.SendPropertyChanged("FotografPath");
					this.OnFotografPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_PersonelBolgeler", Storage="_PersonelBolgelers", ThisKey="PersonelID", OtherKey="PersonelID")]
		public EntitySet<PersonelBolgeler> PersonelBolgelers
		{
			get
			{
				return this._PersonelBolgelers;
			}
			set
			{
				this._PersonelBolgelers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_Personeller", Storage="_Personellers", ThisKey="PersonelID", OtherKey="BagliCalistigiKisi")]
		public EntitySet<Personeller> Personellers
		{
			get
			{
				return this._Personellers;
			}
			set
			{
				this._Personellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_Satislar", Storage="_Satislars", ThisKey="PersonelID", OtherKey="PersonelID")]
		public EntitySet<Satislar> Satislars
		{
			get
			{
				return this._Satislars;
			}
			set
			{
				this._Satislars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_Personeller", Storage="_Personeller1", ThisKey="BagliCalistigiKisi", OtherKey="PersonelID", IsForeignKey=true)]
		public Personeller Personeller1
		{
			get
			{
				return this._Personeller1.Entity;
			}
			set
			{
				Personeller previousValue = this._Personeller1.Entity;
				if (((previousValue != value) 
							|| (this._Personeller1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personeller1.Entity = null;
						previousValue.Personellers.Remove(this);
					}
					this._Personeller1.Entity = value;
					if ((value != null))
					{
						value.Personellers.Add(this);
						this._BagliCalistigiKisi = value.PersonelID;
					}
					else
					{
						this._BagliCalistigiKisi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personeller1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonelBolgelers(PersonelBolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Personeller = this;
		}
		
		private void detach_PersonelBolgelers(PersonelBolgeler entity)
		{
			this.SendPropertyChanging();
			entity.Personeller = null;
		}
		
		private void attach_Personellers(Personeller entity)
		{
			this.SendPropertyChanging();
			entity.Personeller1 = this;
		}
		
		private void detach_Personellers(Personeller entity)
		{
			this.SendPropertyChanging();
			entity.Personeller1 = null;
		}
		
		private void attach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Personeller = this;
		}
		
		private void detach_Satislars(Satislar entity)
		{
			this.SendPropertyChanging();
			entity.Personeller = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SatisDetay")]
	public partial class SatisDetay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SatisID;
		
		private int _UrunID;
		
		private decimal _Fiyat;
		
		private short _Adet;
		
		private float _Indirim;
		
		private EntityRef<Urunler> _Urunler;
		
		private EntityRef<Satislar> _Satislar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSatisIDChanging(int value);
    partial void OnSatisIDChanged();
    partial void OnUrunIDChanging(int value);
    partial void OnUrunIDChanged();
    partial void OnFiyatChanging(decimal value);
    partial void OnFiyatChanged();
    partial void OnAdetChanging(short value);
    partial void OnAdetChanged();
    partial void OnIndirimChanging(float value);
    partial void OnIndirimChanged();
    #endregion
		
		public SatisDetay()
		{
			this._Urunler = default(EntityRef<Urunler>);
			this._Satislar = default(EntityRef<Satislar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatisID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SatisID
		{
			get
			{
				return this._SatisID;
			}
			set
			{
				if ((this._SatisID != value))
				{
					if (this._Satislar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSatisIDChanging(value);
					this.SendPropertyChanging();
					this._SatisID = value;
					this.SendPropertyChanged("SatisID");
					this.OnSatisIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrunID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UrunID
		{
			get
			{
				return this._UrunID;
			}
			set
			{
				if ((this._UrunID != value))
				{
					if (this._Urunler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUrunIDChanging(value);
					this.SendPropertyChanging();
					this._UrunID = value;
					this.SendPropertyChanged("UrunID");
					this.OnUrunIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fiyat", DbType="Money NOT NULL")]
		public decimal Fiyat
		{
			get
			{
				return this._Fiyat;
			}
			set
			{
				if ((this._Fiyat != value))
				{
					this.OnFiyatChanging(value);
					this.SendPropertyChanging();
					this._Fiyat = value;
					this.SendPropertyChanged("Fiyat");
					this.OnFiyatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adet", DbType="SmallInt NOT NULL")]
		public short Adet
		{
			get
			{
				return this._Adet;
			}
			set
			{
				if ((this._Adet != value))
				{
					this.OnAdetChanging(value);
					this.SendPropertyChanging();
					this._Adet = value;
					this.SendPropertyChanged("Adet");
					this.OnAdetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirim", DbType="Real NOT NULL")]
		public float Indirim
		{
			get
			{
				return this._Indirim;
			}
			set
			{
				if ((this._Indirim != value))
				{
					this.OnIndirimChanging(value);
					this.SendPropertyChanging();
					this._Indirim = value;
					this.SendPropertyChanged("Indirim");
					this.OnIndirimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Urunler_SatisDetay", Storage="_Urunler", ThisKey="UrunID", OtherKey="UrunID", IsForeignKey=true)]
		public Urunler Urunler
		{
			get
			{
				return this._Urunler.Entity;
			}
			set
			{
				Urunler previousValue = this._Urunler.Entity;
				if (((previousValue != value) 
							|| (this._Urunler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Urunler.Entity = null;
						previousValue.SatisDetays.Remove(this);
					}
					this._Urunler.Entity = value;
					if ((value != null))
					{
						value.SatisDetays.Add(this);
						this._UrunID = value.UrunID;
					}
					else
					{
						this._UrunID = default(int);
					}
					this.SendPropertyChanged("Urunler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satislar_SatisDetay", Storage="_Satislar", ThisKey="SatisID", OtherKey="SatisID", IsForeignKey=true)]
		public Satislar Satislar
		{
			get
			{
				return this._Satislar.Entity;
			}
			set
			{
				Satislar previousValue = this._Satislar.Entity;
				if (((previousValue != value) 
							|| (this._Satislar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Satislar.Entity = null;
						previousValue.SatisDetays.Remove(this);
					}
					this._Satislar.Entity = value;
					if ((value != null))
					{
						value.SatisDetays.Add(this);
						this._SatisID = value.SatisID;
					}
					else
					{
						this._SatisID = default(int);
					}
					this.SendPropertyChanged("Satislar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Satislar")]
	public partial class Satislar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SatisID;
		
		private string _MusteriID;
		
		private System.Nullable<int> _PersonelID;
		
		private System.Nullable<System.DateTime> _SatisTarihi;
		
		private System.Nullable<System.DateTime> _OdemeTarihi;
		
		private System.Nullable<System.DateTime> _SevkTarihi;
		
		private System.Nullable<int> _ShipVia;
		
		private System.Nullable<decimal> _NakliyeUcreti;
		
		private string _SevkAdi;
		
		private string _SevkAdresi;
		
		private string _SevkSehri;
		
		private string _SevkBolgesi;
		
		private string _SevkPostaKodu;
		
		private string _SevkUlkesi;
		
		private EntitySet<SatisDetay> _SatisDetays;
		
		private EntityRef<Musteriler> _Musteriler;
		
		private EntityRef<Nakliyeciler> _Nakliyeciler;
		
		private EntityRef<Personeller> _Personeller;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSatisIDChanging(int value);
    partial void OnSatisIDChanged();
    partial void OnMusteriIDChanging(string value);
    partial void OnMusteriIDChanged();
    partial void OnPersonelIDChanging(System.Nullable<int> value);
    partial void OnPersonelIDChanged();
    partial void OnSatisTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnSatisTarihiChanged();
    partial void OnOdemeTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnOdemeTarihiChanged();
    partial void OnSevkTarihiChanging(System.Nullable<System.DateTime> value);
    partial void OnSevkTarihiChanged();
    partial void OnShipViaChanging(System.Nullable<int> value);
    partial void OnShipViaChanged();
    partial void OnNakliyeUcretiChanging(System.Nullable<decimal> value);
    partial void OnNakliyeUcretiChanged();
    partial void OnSevkAdiChanging(string value);
    partial void OnSevkAdiChanged();
    partial void OnSevkAdresiChanging(string value);
    partial void OnSevkAdresiChanged();
    partial void OnSevkSehriChanging(string value);
    partial void OnSevkSehriChanged();
    partial void OnSevkBolgesiChanging(string value);
    partial void OnSevkBolgesiChanged();
    partial void OnSevkPostaKoduChanging(string value);
    partial void OnSevkPostaKoduChanged();
    partial void OnSevkUlkesiChanging(string value);
    partial void OnSevkUlkesiChanged();
    #endregion
		
		public Satislar()
		{
			this._SatisDetays = new EntitySet<SatisDetay>(new Action<SatisDetay>(this.attach_SatisDetays), new Action<SatisDetay>(this.detach_SatisDetays));
			this._Musteriler = default(EntityRef<Musteriler>);
			this._Nakliyeciler = default(EntityRef<Nakliyeciler>);
			this._Personeller = default(EntityRef<Personeller>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatisID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SatisID
		{
			get
			{
				return this._SatisID;
			}
			set
			{
				if ((this._SatisID != value))
				{
					this.OnSatisIDChanging(value);
					this.SendPropertyChanging();
					this._SatisID = value;
					this.SendPropertyChanged("SatisID");
					this.OnSatisIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriID", DbType="NChar(5)")]
		public string MusteriID
		{
			get
			{
				return this._MusteriID;
			}
			set
			{
				if ((this._MusteriID != value))
				{
					if (this._Musteriler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMusteriIDChanging(value);
					this.SendPropertyChanging();
					this._MusteriID = value;
					this.SendPropertyChanged("MusteriID");
					this.OnMusteriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonelID", DbType="Int")]
		public System.Nullable<int> PersonelID
		{
			get
			{
				return this._PersonelID;
			}
			set
			{
				if ((this._PersonelID != value))
				{
					if (this._Personeller.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonelIDChanging(value);
					this.SendPropertyChanging();
					this._PersonelID = value;
					this.SendPropertyChanged("PersonelID");
					this.OnPersonelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SatisTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> SatisTarihi
		{
			get
			{
				return this._SatisTarihi;
			}
			set
			{
				if ((this._SatisTarihi != value))
				{
					this.OnSatisTarihiChanging(value);
					this.SendPropertyChanging();
					this._SatisTarihi = value;
					this.SendPropertyChanged("SatisTarihi");
					this.OnSatisTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdemeTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> OdemeTarihi
		{
			get
			{
				return this._OdemeTarihi;
			}
			set
			{
				if ((this._OdemeTarihi != value))
				{
					this.OnOdemeTarihiChanging(value);
					this.SendPropertyChanging();
					this._OdemeTarihi = value;
					this.SendPropertyChanged("OdemeTarihi");
					this.OnOdemeTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkTarihi", DbType="DateTime")]
		public System.Nullable<System.DateTime> SevkTarihi
		{
			get
			{
				return this._SevkTarihi;
			}
			set
			{
				if ((this._SevkTarihi != value))
				{
					this.OnSevkTarihiChanging(value);
					this.SendPropertyChanging();
					this._SevkTarihi = value;
					this.SendPropertyChanged("SevkTarihi");
					this.OnSevkTarihiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipVia", DbType="Int")]
		public System.Nullable<int> ShipVia
		{
			get
			{
				return this._ShipVia;
			}
			set
			{
				if ((this._ShipVia != value))
				{
					if (this._Nakliyeciler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipViaChanging(value);
					this.SendPropertyChanging();
					this._ShipVia = value;
					this.SendPropertyChanged("ShipVia");
					this.OnShipViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NakliyeUcreti", DbType="Money")]
		public System.Nullable<decimal> NakliyeUcreti
		{
			get
			{
				return this._NakliyeUcreti;
			}
			set
			{
				if ((this._NakliyeUcreti != value))
				{
					this.OnNakliyeUcretiChanging(value);
					this.SendPropertyChanging();
					this._NakliyeUcreti = value;
					this.SendPropertyChanged("NakliyeUcreti");
					this.OnNakliyeUcretiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkAdi", DbType="NVarChar(40)")]
		public string SevkAdi
		{
			get
			{
				return this._SevkAdi;
			}
			set
			{
				if ((this._SevkAdi != value))
				{
					this.OnSevkAdiChanging(value);
					this.SendPropertyChanging();
					this._SevkAdi = value;
					this.SendPropertyChanged("SevkAdi");
					this.OnSevkAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkAdresi", DbType="NVarChar(60)")]
		public string SevkAdresi
		{
			get
			{
				return this._SevkAdresi;
			}
			set
			{
				if ((this._SevkAdresi != value))
				{
					this.OnSevkAdresiChanging(value);
					this.SendPropertyChanging();
					this._SevkAdresi = value;
					this.SendPropertyChanged("SevkAdresi");
					this.OnSevkAdresiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkSehri", DbType="NVarChar(15)")]
		public string SevkSehri
		{
			get
			{
				return this._SevkSehri;
			}
			set
			{
				if ((this._SevkSehri != value))
				{
					this.OnSevkSehriChanging(value);
					this.SendPropertyChanging();
					this._SevkSehri = value;
					this.SendPropertyChanged("SevkSehri");
					this.OnSevkSehriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkBolgesi", DbType="NVarChar(15)")]
		public string SevkBolgesi
		{
			get
			{
				return this._SevkBolgesi;
			}
			set
			{
				if ((this._SevkBolgesi != value))
				{
					this.OnSevkBolgesiChanging(value);
					this.SendPropertyChanging();
					this._SevkBolgesi = value;
					this.SendPropertyChanged("SevkBolgesi");
					this.OnSevkBolgesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkPostaKodu", DbType="NVarChar(10)")]
		public string SevkPostaKodu
		{
			get
			{
				return this._SevkPostaKodu;
			}
			set
			{
				if ((this._SevkPostaKodu != value))
				{
					this.OnSevkPostaKoduChanging(value);
					this.SendPropertyChanging();
					this._SevkPostaKodu = value;
					this.SendPropertyChanged("SevkPostaKodu");
					this.OnSevkPostaKoduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SevkUlkesi", DbType="NVarChar(15)")]
		public string SevkUlkesi
		{
			get
			{
				return this._SevkUlkesi;
			}
			set
			{
				if ((this._SevkUlkesi != value))
				{
					this.OnSevkUlkesiChanging(value);
					this.SendPropertyChanging();
					this._SevkUlkesi = value;
					this.SendPropertyChanged("SevkUlkesi");
					this.OnSevkUlkesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satislar_SatisDetay", Storage="_SatisDetays", ThisKey="SatisID", OtherKey="SatisID")]
		public EntitySet<SatisDetay> SatisDetays
		{
			get
			{
				return this._SatisDetays;
			}
			set
			{
				this._SatisDetays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Musteriler_Satislar", Storage="_Musteriler", ThisKey="MusteriID", OtherKey="MusteriID", IsForeignKey=true)]
		public Musteriler Musteriler
		{
			get
			{
				return this._Musteriler.Entity;
			}
			set
			{
				Musteriler previousValue = this._Musteriler.Entity;
				if (((previousValue != value) 
							|| (this._Musteriler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Musteriler.Entity = null;
						previousValue.Satislars.Remove(this);
					}
					this._Musteriler.Entity = value;
					if ((value != null))
					{
						value.Satislars.Add(this);
						this._MusteriID = value.MusteriID;
					}
					else
					{
						this._MusteriID = default(string);
					}
					this.SendPropertyChanged("Musteriler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nakliyeciler_Satislar", Storage="_Nakliyeciler", ThisKey="ShipVia", OtherKey="NakliyeciID", IsForeignKey=true)]
		public Nakliyeciler Nakliyeciler
		{
			get
			{
				return this._Nakliyeciler.Entity;
			}
			set
			{
				Nakliyeciler previousValue = this._Nakliyeciler.Entity;
				if (((previousValue != value) 
							|| (this._Nakliyeciler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nakliyeciler.Entity = null;
						previousValue.Satislars.Remove(this);
					}
					this._Nakliyeciler.Entity = value;
					if ((value != null))
					{
						value.Satislars.Add(this);
						this._ShipVia = value.NakliyeciID;
					}
					else
					{
						this._ShipVia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nakliyeciler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personeller_Satislar", Storage="_Personeller", ThisKey="PersonelID", OtherKey="PersonelID", IsForeignKey=true)]
		public Personeller Personeller
		{
			get
			{
				return this._Personeller.Entity;
			}
			set
			{
				Personeller previousValue = this._Personeller.Entity;
				if (((previousValue != value) 
							|| (this._Personeller.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personeller.Entity = null;
						previousValue.Satislars.Remove(this);
					}
					this._Personeller.Entity = value;
					if ((value != null))
					{
						value.Satislars.Add(this);
						this._PersonelID = value.PersonelID;
					}
					else
					{
						this._PersonelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personeller");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SatisDetays(SatisDetay entity)
		{
			this.SendPropertyChanging();
			entity.Satislar = this;
		}
		
		private void detach_SatisDetays(SatisDetay entity)
		{
			this.SendPropertyChanging();
			entity.Satislar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tedarikciler")]
	public partial class Tedarikciler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TedarikciID;
		
		private string _SirketAdi;
		
		private string _MusteriAdi;
		
		private string _MusteriUnvani;
		
		private string _Adres;
		
		private string _Sehir;
		
		private string _Bolge;
		
		private string _PostaKodu;
		
		private string _Ulke;
		
		private string _Telefon;
		
		private string _Faks;
		
		private string _WebSayfasi;
		
		private EntitySet<Urunler> _Urunlers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTedarikciIDChanging(int value);
    partial void OnTedarikciIDChanged();
    partial void OnSirketAdiChanging(string value);
    partial void OnSirketAdiChanged();
    partial void OnMusteriAdiChanging(string value);
    partial void OnMusteriAdiChanged();
    partial void OnMusteriUnvaniChanging(string value);
    partial void OnMusteriUnvaniChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnSehirChanging(string value);
    partial void OnSehirChanged();
    partial void OnBolgeChanging(string value);
    partial void OnBolgeChanged();
    partial void OnPostaKoduChanging(string value);
    partial void OnPostaKoduChanged();
    partial void OnUlkeChanging(string value);
    partial void OnUlkeChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnFaksChanging(string value);
    partial void OnFaksChanged();
    partial void OnWebSayfasiChanging(string value);
    partial void OnWebSayfasiChanged();
    #endregion
		
		public Tedarikciler()
		{
			this._Urunlers = new EntitySet<Urunler>(new Action<Urunler>(this.attach_Urunlers), new Action<Urunler>(this.detach_Urunlers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TedarikciID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TedarikciID
		{
			get
			{
				return this._TedarikciID;
			}
			set
			{
				if ((this._TedarikciID != value))
				{
					this.OnTedarikciIDChanging(value);
					this.SendPropertyChanging();
					this._TedarikciID = value;
					this.SendPropertyChanged("TedarikciID");
					this.OnTedarikciIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SirketAdi", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string SirketAdi
		{
			get
			{
				return this._SirketAdi;
			}
			set
			{
				if ((this._SirketAdi != value))
				{
					this.OnSirketAdiChanging(value);
					this.SendPropertyChanging();
					this._SirketAdi = value;
					this.SendPropertyChanged("SirketAdi");
					this.OnSirketAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriAdi", DbType="NVarChar(30)")]
		public string MusteriAdi
		{
			get
			{
				return this._MusteriAdi;
			}
			set
			{
				if ((this._MusteriAdi != value))
				{
					this.OnMusteriAdiChanging(value);
					this.SendPropertyChanging();
					this._MusteriAdi = value;
					this.SendPropertyChanged("MusteriAdi");
					this.OnMusteriAdiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusteriUnvani", DbType="NVarChar(30)")]
		public string MusteriUnvani
		{
			get
			{
				return this._MusteriUnvani;
			}
			set
			{
				if ((this._MusteriUnvani != value))
				{
					this.OnMusteriUnvaniChanging(value);
					this.SendPropertyChanging();
					this._MusteriUnvani = value;
					this.SendPropertyChanged("MusteriUnvani");
					this.OnMusteriUnvaniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(60)")]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sehir", DbType="NVarChar(15)")]
		public string Sehir
		{
			get
			{
				return this._Sehir;
			}
			set
			{
				if ((this._Sehir != value))
				{
					this.OnSehirChanging(value);
					this.SendPropertyChanging();
					this._Sehir = value;
					this.SendPropertyChanged("Sehir");
					this.OnSehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bolge", DbType="NVarChar(15)")]
		public string Bolge
		{
			get
			{
				return this._Bolge;
			}
			set
			{
				if ((this._Bolge != value))
				{
					this.OnBolgeChanging(value);
					this.SendPropertyChanging();
					this._Bolge = value;
					this.SendPropertyChanged("Bolge");
					this.OnBolgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostaKodu", DbType="NVarChar(10)")]
		public string PostaKodu
		{
			get
			{
				return this._PostaKodu;
			}
			set
			{
				if ((this._PostaKodu != value))
				{
					this.OnPostaKoduChanging(value);
					this.SendPropertyChanging();
					this._PostaKodu = value;
					this.SendPropertyChanged("PostaKodu");
					this.OnPostaKoduChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ulke", DbType="NVarChar(15)")]
		public string Ulke
		{
			get
			{
				return this._Ulke;
			}
			set
			{
				if ((this._Ulke != value))
				{
					this.OnUlkeChanging(value);
					this.SendPropertyChanging();
					this._Ulke = value;
					this.SendPropertyChanged("Ulke");
					this.OnUlkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NVarChar(24)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faks", DbType="NVarChar(24)")]
		public string Faks
		{
			get
			{
				return this._Faks;
			}
			set
			{
				if ((this._Faks != value))
				{
					this.OnFaksChanging(value);
					this.SendPropertyChanging();
					this._Faks = value;
					this.SendPropertyChanged("Faks");
					this.OnFaksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSayfasi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string WebSayfasi
		{
			get
			{
				return this._WebSayfasi;
			}
			set
			{
				if ((this._WebSayfasi != value))
				{
					this.OnWebSayfasiChanging(value);
					this.SendPropertyChanging();
					this._WebSayfasi = value;
					this.SendPropertyChanged("WebSayfasi");
					this.OnWebSayfasiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tedarikciler_Urunler", Storage="_Urunlers", ThisKey="TedarikciID", OtherKey="TedarikciID")]
		public EntitySet<Urunler> Urunlers
		{
			get
			{
				return this._Urunlers;
			}
			set
			{
				this._Urunlers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Tedarikciler = this;
		}
		
		private void detach_Urunlers(Urunler entity)
		{
			this.SendPropertyChanging();
			entity.Tedarikciler = null;
		}
	}
}
#pragma warning restore 1591
